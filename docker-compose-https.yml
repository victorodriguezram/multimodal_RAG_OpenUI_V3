version: '3.8'

services:
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
      - ./nginx/conf.d:/etc/nginx/conf.d
      - certbot_data:/var/www/certbot
      - certbot_conf:/etc/letsencrypt
    depends_on:
      - multimodal-rag
      - n8n
    restart: unless-stopped
    networks:
      - rag_network

  certbot:
    image: certbot/certbot
    volumes:
      - certbot_data:/var/www/certbot
      - certbot_conf:/etc/letsencrypt
    command: certonly --webroot -w /var/www/certbot --force-renewal --email your-email@example.com -d your-domain.com -d n8n.your-domain.com -d api.your-domain.com --agree-tos
    depends_on:
      - nginx
    networks:
      - rag_network

  multimodal-rag:
    build:
      context: .
      dockerfile: Dockerfile
    expose:
      - "8501"
      - "8000"
    environment:
      - COHERE_API_KEY=${COHERE_API_KEY}
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - GEMINI_MODEL=${GEMINI_MODEL:-gemini-2.5-flash-preview-04-17}
      - STREAMLIT_SERVER_HEADLESS=true
      - STREAMLIT_SERVER_ENABLE_CORS=false
      - STREAMLIT_SERVER_ENABLE_XSRF_PROTECTION=false
      - STREAMLIT_SERVER_ADDRESS=0.0.0.0
    volumes:
      - rag_data:/app/data
      - uploaded_files:/app/uploads
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8501/_stcore/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - rag_network

  n8n:
    image: n8nio/n8n:latest
    expose:
      - "5678"
    environment:
      - N8N_BASIC_AUTH_ACTIVE=true
      - N8N_BASIC_AUTH_USER=${N8N_USER:-admin}
      - N8N_BASIC_AUTH_PASSWORD=${N8N_PASSWORD:-admin123}
      - DB_TYPE=sqlite
      - N8N_ENCRYPTION_KEY=${N8N_ENCRYPTION_KEY:-your-encryption-key-here}
      - N8N_HOST=${N8N_DOMAIN:-n8n.your-domain.com}
      - N8N_PORT=443
      - N8N_PROTOCOL=https
      - WEBHOOK_URL=https://${N8N_DOMAIN:-n8n.your-domain.com}/
      - N8N_SECURE_COOKIE=true
      - NODE_ENV=production
    volumes:
      - n8n_data:/home/node/.n8n
    restart: unless-stopped
    depends_on:
      - multimodal-rag
    networks:
      - rag_network

volumes:
  rag_data:
    driver: local
  uploaded_files:
    driver: local
  n8n_data:
    driver: local
  certbot_data:
    driver: local
  certbot_conf:
    driver: local

networks:
  rag_network:
    driver: bridge
